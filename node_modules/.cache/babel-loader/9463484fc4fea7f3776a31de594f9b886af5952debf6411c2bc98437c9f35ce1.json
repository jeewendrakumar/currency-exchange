{"ast":null,"code":"var _jsxFileName = \"/Users/jeewendrakumar/Documents/currency-exchange/src/components/Currency/Converter/Converter.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useRef, useState, useCallback } from \"react\";\nimport { Button, TextField, FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\nimport ExchangeHistroy from \"../ExchangeHistory/ExchangeHistory\";\nimport ExchangeView from \"./ExchangeView\";\nimport { getCurrency, convertCurrency, getExchangeHistory } from \"../../../helper/Api\";\nimport \"./Converter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyConverter = () => {\n  _s();\n  const selectedAmount = useRef(1);\n  const [currencyList, setCurrencyList] = useState([]);\n  let [currencyTo, setCurrencyTo] = useState(\"INR\");\n  let [currencyFrom, setCurrencyFrom] = useState(\"USD\");\n  const [currencyRateTo, setCurrencyRateTo] = useState(0);\n  const [currencyRateFrom, setCurrencyRateFrom] = useState(0);\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const [exchangeRateHistory, setExchangeRateHistory] = useState([]);\n  const [min, setMin] = useState(0);\n  const [max, setMax] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [chartData, setChartData] = useState([]);\n  const [chartLabels, setChartLabels] = useState([]);\n  const [duration, setDuration] = useState(14);\n  const handleSwapCurrency = event => {\n    setCurrencyFrom(currencyTo);\n    setCurrencyTo(currencyFrom);\n    [currencyFrom, currencyTo] = [currencyTo, currencyFrom];\n  };\n  const currencyToHandler = event => {\n    event.preventDefault();\n    const to = event.target.value;\n    setCurrencyTo(to);\n  };\n  const currencyFromHandler = event => {\n    event.preventDefault();\n    const from = event.target.value;\n    setCurrencyFrom(from);\n  };\n  const convertHandler = event => {\n    var _selectedAmount$curre;\n    event.preventDefault();\n    const payload = {\n      amount: (_selectedAmount$curre = selectedAmount.current) === null || _selectedAmount$curre === void 0 ? void 0 : _selectedAmount$curre.value,\n      from: currencyFrom,\n      to: currencyTo\n    };\n    const api = convertCurrency(payload);\n    api.then(response => {\n      localStorage.setItem('exchangeRate', JSON.stringify(response));\n      localStorage.setItem('currencyRateTo', JSON.stringify(currencyList[currencyTo]));\n      localStorage.setItem('currencyRateFrom', JSON.stringify(currencyList[currencyFrom]));\n      setExchangeRate(response);\n      setCurrencyRateTo(currencyList[currencyTo]);\n      setCurrencyRateFrom(currencyList[currencyFrom]);\n      exchangeHistoryHandler(duration);\n    });\n  };\n  const getDates = selectedDuration => {\n    const currentDate = new Date();\n    const date = currentDate.getDate();\n    const month = currentDate.getMonth() + 1;\n    const year = currentDate.getFullYear();\n    currentDate.setDate(date - selectedDuration);\n    const dateAgo = currentDate.getDate();\n    const monthAgo = currentDate.getMonth() + 1;\n    const yearAgo = currentDate.getFullYear();\n    return {\n      start_date: `${yearAgo}-${monthAgo}-${dateAgo}`,\n      end_date: `${year}-${month}-${date}`\n    };\n  };\n  const exchangeHistoryHandler = selectedDuration => {\n    const payload = getDates(selectedDuration);\n    const api = getExchangeHistory(payload);\n    api.then(response => {\n      const rates = response.rates;\n      const allCurrecnyVal = Object.entries(rates).map(item => parseFloat(item[1][currencyTo]));\n      const allDates = Object.entries(rates).map(item => item[0]);\n      setChartData(allDates);\n      localStorage.setItem('allDates', JSON.stringify(allDates));\n      setChartLabels(allCurrecnyVal);\n      localStorage.setItem('allCurrecnyVal', JSON.stringify(allCurrecnyVal));\n      const minVal = Math.min(...allCurrecnyVal);\n      setMin(minVal);\n      localStorage.setItem('minVal', JSON.stringify(minVal));\n      const maxVal = Math.max(...allCurrecnyVal);\n      setMax(maxVal);\n      localStorage.setItem('maxVal', JSON.stringify(maxVal));\n      const avgVal = allCurrecnyVal.reduce((a, b) => a + b, 0) / allCurrecnyVal.length;\n      setAverage(avgVal);\n      localStorage.setItem('avgVal', JSON.stringify(avgVal));\n      setExchangeRateHistory(rates);\n      localStorage.setItem('exchangeRateHistory', JSON.stringify(rates));\n    });\n  };\n  const getData = useCallback(() => {\n    const api = getCurrency();\n    api.then(response => {\n      localStorage.setItem('dataKey', JSON.stringify(response.rates));\n      setCurrencyList(response.rates);\n    });\n  }, []);\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('dataKey'));\n    if (items) {\n      setCurrencyList(items);\n    } else {\n      getData();\n    }\n  }, [getData]);\n  useEffect(() => {\n    const exchangeRate = JSON.parse(localStorage.getItem('exchangeRate'));\n    if (exchangeRate) {\n      setExchangeRate(exchangeRate);\n    }\n    const currencyRateTo = JSON.parse(localStorage.getItem('currencyRateTo'));\n    if (currencyRateTo) {\n      setCurrencyRateTo(currencyRateTo);\n    }\n    const currencyRateFrom = JSON.parse(localStorage.getItem('currencyRateFrom'));\n    if (currencyRateTo) {\n      setCurrencyRateFrom(currencyRateFrom);\n    }\n  }, []);\n  useEffect(() => {\n    const exchangeRateHistory = JSON.parse(localStorage.getItem('exchangeRateHistory'));\n    if (exchangeRateHistory) {\n      setExchangeRate(exchangeRateHistory);\n    }\n    const allDates = JSON.parse(localStorage.getItem('allDates'));\n    if (allDates) {\n      setChartData(allDates);\n    }\n    const allCurrecnyVal = JSON.parse(localStorage.getItem('allCurrecnyVal'));\n    if (allCurrecnyVal) {\n      setChartLabels(allCurrecnyVal);\n    }\n    const minVal = JSON.parse(localStorage.getItem('minVal'));\n    if (minVal) {\n      setMin(minVal);\n    }\n    const maxVal = JSON.parse(localStorage.getItem('maxVal'));\n    if (maxVal) {\n      setMax(maxVal);\n    }\n    const avgVal = JSON.parse(localStorage.getItem('avgVal'));\n    if (avgVal) {\n      setAverage(avgVal);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"I want to convert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            label: \"Amount\",\n            variant: \"standard\",\n            inputRef: selectedAmount,\n            defaultValue: \"1\",\n            InputProps: {\n              inputProps: {\n                min: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-standard-label\",\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-standard-label\",\n              id: \"demo-simple-select-standard\",\n              name: \"from\",\n              value: currencyFrom,\n              defaultValue: currencyFrom,\n              onChange: currencyFromHandler,\n              label: \"From\",\n              children: Object.entries(currencyList).map(currentValue => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: currentValue[0],\n                  children: currentValue[0]\n                }, currentValue[1], false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control f-0\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            className: \"btn-invert\",\n            onClick: handleSwapCurrency,\n            style: {\n              minWidth: \"45px\",\n              color: \"#009688\",\n              backgroundColor: \"#fff\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons\",\n              children: \"compare_arrows\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"standard\",\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-standard-label\",\n              children: \"To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-standard-label\",\n              id: \"demo-simple-select-standard\",\n              name: \"to\",\n              value: currencyTo,\n              defaultValue: currencyTo,\n              onChange: currencyToHandler,\n              label: \"To\",\n              children: Object.entries(currencyList).map(currentValue => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: currentValue[0],\n                  children: currentValue[0]\n                }, currentValue[1], false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          className: \"btn btn-primary\",\n          style: {\n            backgroundColor: \"#009688\",\n            marginRight: 15,\n            width: \"100%\"\n          },\n          onClick: convertHandler,\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), exchangeRate && /*#__PURE__*/_jsxDEV(ExchangeView, {\n      exchangeRate: exchangeRate,\n      ratesTo: currencyRateTo,\n      ratesFrom: currencyRateFrom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), chartData.length > 0 && /*#__PURE__*/_jsxDEV(ExchangeHistroy, {\n      exchangeHistoryHandler: exchangeHistoryHandler,\n      exchangeRateHistory: exchangeRateHistory,\n      currencyTo: currencyTo,\n      currencyFrom: currencyFrom,\n      min: min,\n      max: max,\n      average: average,\n      chartLabel: chartLabels,\n      chartData: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrencyConverter, \"QKx4A34C4rDy2gw8vOvNguol1No=\");\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","Fragment","useEffect","useRef","useState","useCallback","Button","TextField","FormControl","InputLabel","MenuItem","Select","ExchangeHistroy","ExchangeView","getCurrency","convertCurrency","getExchangeHistory","CurrencyConverter","selectedAmount","currencyList","setCurrencyList","currencyTo","setCurrencyTo","currencyFrom","setCurrencyFrom","currencyRateTo","setCurrencyRateTo","currencyRateFrom","setCurrencyRateFrom","exchangeRate","setExchangeRate","exchangeRateHistory","setExchangeRateHistory","min","setMin","max","setMax","average","setAverage","chartData","setChartData","chartLabels","setChartLabels","duration","setDuration","handleSwapCurrency","event","currencyToHandler","preventDefault","to","target","value","currencyFromHandler","from","convertHandler","payload","amount","current","api","then","response","localStorage","setItem","JSON","stringify","exchangeHistoryHandler","getDates","selectedDuration","currentDate","Date","date","getDate","month","getMonth","year","getFullYear","setDate","dateAgo","monthAgo","yearAgo","start_date","end_date","rates","allCurrecnyVal","Object","entries","map","item","parseFloat","allDates","minVal","Math","maxVal","avgVal","reduce","a","b","length","getData","items","parse","getItem","inputProps","currentValue","minWidth","color","backgroundColor","marginRight","width"],"sources":["/Users/jeewendrakumar/Documents/currency-exchange/src/components/Currency/Converter/Converter.js"],"sourcesContent":["import React, {\n  Fragment,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from \"react\";\nimport {\n  Button,\n  TextField,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@mui/material\";\n\nimport ExchangeHistroy from \"../ExchangeHistory/ExchangeHistory\";\nimport ExchangeView from \"./ExchangeView\";\nimport {\n  getCurrency,\n  convertCurrency,\n  getExchangeHistory,\n} from \"../../../helper/Api\";\nimport \"./Converter.css\";\n\nconst CurrencyConverter = () => {\n  const selectedAmount = useRef(1);\n\n  const [currencyList, setCurrencyList] = useState([]);\n  let [currencyTo, setCurrencyTo] = useState(\"INR\");\n  let [currencyFrom, setCurrencyFrom] = useState(\"USD\");\n\n  const [currencyRateTo, setCurrencyRateTo] = useState(0);\n  const [currencyRateFrom, setCurrencyRateFrom] = useState(0);\n\n  const [exchangeRate, setExchangeRate] = useState(null);\n  const [exchangeRateHistory, setExchangeRateHistory] = useState([]);\n\n  const [min, setMin] = useState(0);\n  const [max, setMax] = useState(0);\n  const [average, setAverage] = useState(0);\n\n  const [chartData, setChartData] = useState([]);\n  const [chartLabels, setChartLabels] = useState([]);\n\n  const [duration, setDuration] = useState(14)\n\n  const handleSwapCurrency = (event) => {\n    setCurrencyFrom(currencyTo);\n    setCurrencyTo(currencyFrom);\n    [currencyFrom, currencyTo] = [currencyTo, currencyFrom];\n  };\n\n  const currencyToHandler = (event) => {\n    event.preventDefault();\n    const to = event.target.value;\n    setCurrencyTo(to);\n  };\n\n  const currencyFromHandler = (event) => {\n    event.preventDefault();\n    const from = event.target.value;\n    setCurrencyFrom(from);\n  };\n\n  const convertHandler = (event) => {\n    event.preventDefault();\n    const payload = {\n      amount: selectedAmount.current?.value,\n      from: currencyFrom,\n      to: currencyTo,\n    };\n    const api = convertCurrency(payload);\n    api.then((response) => {\n      localStorage.setItem('exchangeRate', JSON.stringify(response));\n      localStorage.setItem('currencyRateTo', JSON.stringify(currencyList[currencyTo]));\n      localStorage.setItem('currencyRateFrom', JSON.stringify(currencyList[currencyFrom]));\n      setExchangeRate(response);\n      setCurrencyRateTo(currencyList[currencyTo]);\n      setCurrencyRateFrom(currencyList[currencyFrom]);\n      exchangeHistoryHandler(duration);\n    });\n  };\n\n  const getDates = (selectedDuration) => {\n    const currentDate = new Date();\n    const date = currentDate.getDate();\n    const month = currentDate.getMonth() + 1;\n    const year = currentDate.getFullYear();\n\n    currentDate.setDate(date - selectedDuration);\n    const dateAgo = currentDate.getDate();\n    const monthAgo = currentDate.getMonth() + 1;\n    const yearAgo = currentDate.getFullYear();\n\n    return {\n      start_date: `${yearAgo}-${monthAgo}-${dateAgo}`,\n      end_date: `${year}-${month}-${date}`,\n    };\n  };\n\n  const exchangeHistoryHandler = (selectedDuration) => {\n    const payload = getDates(selectedDuration);\n    const api = getExchangeHistory(payload);\n    api.then((response) => {\n      const rates = response.rates;\n      const allCurrecnyVal = Object.entries(rates).map((item) =>\n        parseFloat(item[1][currencyTo])\n      );\n\n      const allDates = Object.entries(rates).map((item) => item[0]);\n\n      setChartData(allDates);\n      localStorage.setItem('allDates', JSON.stringify(allDates));\n\n      setChartLabels(allCurrecnyVal);\n      localStorage.setItem('allCurrecnyVal', JSON.stringify(allCurrecnyVal));\n\n      const minVal = Math.min(...allCurrecnyVal);\n      setMin(minVal);\n      localStorage.setItem('minVal', JSON.stringify(minVal));\n\n      const maxVal = Math.max(...allCurrecnyVal);\n      setMax(maxVal);\n      localStorage.setItem('maxVal', JSON.stringify(maxVal));\n\n      const avgVal =\n        allCurrecnyVal.reduce((a, b) => a + b, 0) / allCurrecnyVal.length;\n      setAverage(avgVal);\n      localStorage.setItem('avgVal', JSON.stringify(avgVal));\n\n      setExchangeRateHistory(rates);\n      localStorage.setItem('exchangeRateHistory', JSON.stringify(rates));\n    });\n  };\n\n  const getData = useCallback(() => {\n    const api = getCurrency();\n    api.then((response) => {\n      localStorage.setItem('dataKey', JSON.stringify(response.rates));\n      setCurrencyList(response.rates);\n    });\n  }, []);\n\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem('dataKey'));\n    if (items) {\n      setCurrencyList(items);\n    } else {\n      getData();\n    }\n  }, [getData]);\n\n  useEffect(() => {\n    const exchangeRate = JSON.parse(localStorage.getItem('exchangeRate'));\n    if (exchangeRate) {\n      setExchangeRate(exchangeRate);\n    }\n    const currencyRateTo = JSON.parse(localStorage.getItem('currencyRateTo'));\n    if (currencyRateTo) {\n      setCurrencyRateTo(currencyRateTo);\n    }\n    const currencyRateFrom = JSON.parse(localStorage.getItem('currencyRateFrom'));\n\n    if (currencyRateTo) {\n      setCurrencyRateFrom(currencyRateFrom);\n    }\n  }, [])\n\n  useEffect(() => {\n    const exchangeRateHistory = JSON.parse(localStorage.getItem('exchangeRateHistory'));\n    if (exchangeRateHistory) {\n      setExchangeRate(exchangeRateHistory);\n    }\n    const allDates = JSON.parse(localStorage.getItem('allDates'));\n    if (allDates) {\n      setChartData(allDates);\n    }\n    const allCurrecnyVal = JSON.parse(localStorage.getItem('allCurrecnyVal'));\n    if (allCurrecnyVal) {\n      setChartLabels(allCurrecnyVal);\n    }\n    const minVal = JSON.parse(localStorage.getItem('minVal'));\n    if (minVal) {\n      setMin(minVal);\n    }\n    const maxVal = JSON.parse(localStorage.getItem('maxVal'));\n    if (maxVal) {\n      setMax(maxVal);\n    }\n    const avgVal = JSON.parse(localStorage.getItem('avgVal'));\n    if (avgVal) {\n      setAverage(avgVal);\n    }\n  }, [])\n\n  return (\n    <Fragment>\n      <form>\n        <h1>I want to convert</h1>\n        <div className=\"form-group\">\n          <div className=\"form-control\">\n            <TextField\n              id=\"standard-basic\"\n              label=\"Amount\"\n              variant=\"standard\"\n              inputRef={selectedAmount}\n              defaultValue='1'\n              InputProps={{\n                inputProps: { min: 0 }\n              }}\n            />\n          </div>\n          <div className=\"form-control\">\n            <FormControl variant=\"standard\">\n              <InputLabel id=\"demo-simple-select-standard-label\">\n                From\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-standard-label\"\n                id=\"demo-simple-select-standard\"\n                name=\"from\"\n                value={currencyFrom}\n                defaultValue={currencyFrom}\n                onChange={currencyFromHandler}\n                label=\"From\"\n              >\n                {Object.entries(currencyList).map((currentValue) => {\n                  return (\n                    <MenuItem key={currentValue[1]} value={currentValue[0]}>\n                      {currentValue[0]}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          </div>\n          <div className=\"form-control f-0\">\n            <Button\n              variant=\"contained\"\n              className=\"btn-invert\"\n              onClick={handleSwapCurrency}\n              style={{\n                minWidth: \"45px\",\n                color: \"#009688\",\n                backgroundColor: \"#fff\",\n              }}\n            >\n              <span className=\"material-icons\">compare_arrows</span>\n            </Button>\n          </div>\n          <div className=\"form-control\">\n            <FormControl variant=\"standard\">\n              <InputLabel id=\"demo-simple-select-standard-label\">To</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-standard-label\"\n                id=\"demo-simple-select-standard\"\n                name=\"to\"\n                value={currencyTo}\n                defaultValue={currencyTo}\n                onChange={currencyToHandler}\n                label=\"To\"\n              >\n                {Object.entries(currencyList).map((currentValue) => {\n                  return (\n                    <MenuItem key={currentValue[1]} value={currentValue[0]}>\n                      {currentValue[0]}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          </div>\n          <Button\n            variant=\"contained\"\n            className=\"btn btn-primary\"\n            style={{\n              backgroundColor: \"#009688\",\n              marginRight: 15,\n              width: \"100%\",\n            }}\n            onClick={convertHandler}\n          >\n            Convert\n          </Button>\n        </div>\n      </form>\n      {exchangeRate && (\n        <ExchangeView\n          exchangeRate={exchangeRate}\n          ratesTo={currencyRateTo}\n          ratesFrom={currencyRateFrom}\n        />\n      )}\n      {chartData.length > 0 && (\n        <ExchangeHistroy\n          exchangeHistoryHandler={exchangeHistoryHandler}\n          exchangeRateHistory={exchangeRateHistory}\n          currencyTo={currencyTo}\n          currencyFrom={currencyFrom}\n          min={min}\n          max={max}\n          average={average}\n          chartLabel={chartLabels}\n          chartData={chartData}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default CurrencyConverter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}